@startuml

abstract class Car {
  抽象类 汽车  定义规范
  ==
  属性(field)
  --
  -seat
  --
  #color
  ==
  功能(method)
  --
  +driver(person: person)
  --
  +run()
}

class SmallCar extends Car {
  #color
  --
  #engine
  ==
  getColor()
  --
  setColor()
  --
  driver(person: person)
  --
  run()
}

class Bicycle extends Car {
  #color
  ==
  getColor()
  --
  driver(person: person)
  --
  run()
}

class Truck extends Car {
  #color（颜色）
  --
  #engine（引擎）
  --
  #trailer（挂车）
  ==
  getColor()
  --
  driver(person: person)
  --
  run()
}

Car *--Person

abstract class Person {
  #name
  --
  -country
  --
  -language
  --
  -currency
  ==
  buyCar()
}

SmallCar *-- USAPerson
SmallCar *-- JapanPerson

class USAPerson extends Person {
  #name
  --
  -country
  --
  -language
  --
  -currency
  ==
  buyCar()
  --
  take()
}

class JapanPerson extends Person {
  #name
  --
  -country
  --
  -language
  --
  -currency
  ==
  buyCar()
  --
  seaside()
}

@enduml

